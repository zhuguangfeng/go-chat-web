// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/zhuguangfeng/go-chat/go-chat/cmd/server/app"
	"github.com/zhuguangfeng/go-chat/go-chat/internal/controller/v1/jwt"
	user2 "github.com/zhuguangfeng/go-chat/go-chat/internal/controller/v1/user"
	"github.com/zhuguangfeng/go-chat/go-chat/internal/repository"
	"github.com/zhuguangfeng/go-chat/go-chat/internal/repository/cache"
	"github.com/zhuguangfeng/go-chat/go-chat/internal/repository/dao"
	"github.com/zhuguangfeng/go-chat/go-chat/internal/service/user"
	"github.com/zhuguangfeng/go-chat/go-chat/ioc"
)

// Injectors from wrie.go:

func InitWebServer() *app.App {
	cmdable := ioc.InitRedisCmd()
	jwtHandler := jwt.NewJwtHandler(cmdable)
	db := ioc.InitMysql()
	userDao := dao.NewUserDao(db)
	userCache := cache.NewUserCache(cmdable)
	userRepository := repository.NewUserRepository(userDao, userCache)
	userService := user.NewUserService(userRepository)
	userController := user2.NewUserController(jwtHandler, userService)
	engine := ioc.InitWebServer(userController)
	appApp := &app.App{
		Server: engine,
	}
	return appApp
}
